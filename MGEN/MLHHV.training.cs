﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MGEN
{
    public partial class MLHHV
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Carbon", @"Carbon"),new InputOutputColumnPair(@"Hydrogen", @"Hydrogen"),new InputOutputColumnPair(@"Nitrogen", @"Nitrogen"),new InputOutputColumnPair(@"Sulfur", @"Sulfur"),new InputOutputColumnPair(@"Oxygen", @"Oxygen"),new InputOutputColumnPair(@"Ash", @"Ash"),new InputOutputColumnPair(@"Air_MF", @"Air_MF"),new InputOutputColumnPair(@"Steam_MF", @"Steam_MF"),new InputOutputColumnPair(@"PYROL_T", @"PYROL_T"),new InputOutputColumnPair(@"GASIF_T", @"GASIF_T")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Carbon",@"Hydrogen",@"Nitrogen",@"Sulfur",@"Oxygen",@"Ash",@"Air_MF",@"Steam_MF",@"PYROL_T",@"GASIF_T"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=3270,NumberOfIterations=71,MinimumExampleCountPerLeaf=20,LearningRate=0.999999776672986,LabelColumnName=@"HHV",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=3.39765446341994E-09,FeatureFraction=0.99999999,L1Regularization=4.3999098121355E-09,L2Regularization=0.00111488812402174},MaximumBinCountPerFeature=34}));

            return pipeline;
        }
    }
}
